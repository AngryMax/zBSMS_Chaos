#include <SMS/Player/Mario.hxx>
#include <SMS/MSound/MSBGM.hxx>

#include "p_main.hxx"

/*
/ Settings
*/

static const u8 sSaveBnr[] = {
    0x09, 0x02, 0x00, 0x60, 0x00, 0x20, 0x00, 0x00, 0x01, 0x02, 0x00, 0x4E, 0x00, 0x00, 0x0C, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
    0x00, 0x01, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x01,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x05, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x0E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x01, 0x02, 0x01,
    0x01, 0x01, 0x08, 0x08, 0x08, 0x02, 0x01, 0x01, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00,
    0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x00, 0x00, 0x12,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,
    0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x08, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x14, 0x14, 0x14, 0x15, 0x0E, 0x13, 0x05, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x01, 0x01, 0x01, 0x0A, 0x0A, 0x0A, 0x0B,
    0x02, 0x0C, 0x0C, 0x0C, 0x09, 0x00, 0x00, 0x0C, 0x05, 0x05, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x01, 0x00, 0x01, 0x0C, 0x01, 0x01, 0x01,
    0x0C, 0x0C, 0x00, 0x00, 0x01, 0x0D, 0x0D, 0x0D, 0x05, 0x16, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x0E, 0x0E, 0x01, 0x01, 0x01, 0x08, 0x08, 0x0E, 0x0E, 0x0E,
    0x00, 0x00, 0x00, 0x01, 0x0E, 0x0E, 0x0E, 0x0E, 0x09, 0x09, 0x09, 0x14, 0x14, 0x14, 0x0C, 0x0C,
    0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x17, 0x18, 0x0E, 0x0E, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17,
    0x0E, 0x00, 0x1A, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x1E, 0x01, 0x0B, 0x1E, 0x0E, 0x0E, 0x0C, 0x17,
    0x00, 0x00, 0x01, 0x01, 0x15, 0x11, 0x11, 0x11, 0x17, 0x00, 0x00, 0x00, 0x0E, 0x01, 0x11, 0x11,
    0x0E, 0x00, 0x00, 0x00, 0x02, 0x00, 0x11, 0x11, 0x0B, 0x0C, 0x0C, 0x07, 0x1F, 0x1C, 0x1C, 0x00,
    0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x19, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x1B,
    0x11, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x12, 0x00, 0x00, 0x1C, 0x11, 0x11, 0x11, 0x11, 0x11,
    0x12, 0x12, 0x12, 0x12, 0x11, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x11, 0x00, 0x00, 0x00,
    0x12, 0x12, 0x12, 0x12, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x00,
    0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D,
    0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x11, 0x11,
    0x0E, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x15, 0x15, 0x01, 0x01, 0x01, 0x01, 0x02, 0x01,
    0x15, 0x15, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x0E, 0x1E, 0x0D, 0x09, 0x09, 0x0B, 0x0B,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x0E, 0x1A,
    0x00, 0x00, 0x00, 0x00, 0x0E, 0x0E, 0x0E, 0x0E, 0x0B, 0x0B, 0x09, 0x0E, 0x1A, 0x17, 0x0D, 0x1A,
    0x1A, 0x1A, 0x15, 0x15, 0x15, 0x15, 0x01, 0x01, 0x1A, 0x0E, 0x15, 0x15, 0x15, 0x15, 0x0E, 0x02,
    0x15, 0x15, 0x15, 0x15, 0x15, 0x0E, 0x0E, 0x0E, 0x1A, 0x1A, 0x0F, 0x1E, 0x0E, 0x0E, 0x17, 0x0D,
    0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E,
    0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x0D, 0x20, 0x0F, 0x07, 0x1F, 0x0E, 0x1A, 0x20,
    0x0E, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x0E, 0x0E, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15,
    0x0E, 0x1A, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x20, 0x20, 0x0C, 0x13, 0x0C, 0x0D, 0x0F, 0x0F,
    0x15, 0x15, 0x15, 0x15, 0x00, 0x00, 0x00, 0x00, 0x15, 0x15, 0x15, 0x15, 0x0E, 0x00, 0x00, 0x00,
    0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x00, 0x00, 0x14, 0x21, 0x21, 0x0D, 0x09, 0x09, 0x00, 0x00,
    0x00, 0x00, 0x20, 0x14, 0x14, 0x22, 0x13, 0x05, 0x00, 0x20, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x00, 0x00, 0x00, 0x00, 0x33, 0x33, 0x33, 0x33,
    0x23, 0x1F, 0x0D, 0x0D, 0x0F, 0x1A, 0x14, 0x07, 0x01, 0x1A, 0x0D, 0x1A, 0x1E, 0x2D, 0x01, 0x01,
    0x02, 0x02, 0x07, 0x0D, 0x0D, 0x0F, 0x13, 0x01, 0x38, 0x38, 0x00, 0x00, 0x00, 0x33, 0x38, 0x38,
    0x02, 0x00, 0x00, 0x1F, 0x23, 0x24, 0x06, 0x00, 0x08, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x2F,
    0x02, 0x13, 0x09, 0x09, 0x09, 0x28, 0x28, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x2C,
    0x00, 0x10, 0x11, 0x11, 0x1C, 0x25, 0x25, 0x26, 0x2F, 0x10, 0x28, 0x24, 0x24, 0x24, 0x24, 0x24,
    0x30, 0x31, 0x32, 0x33, 0x33, 0x1D, 0x33, 0x34, 0x2C, 0x2C, 0x2C, 0x2C, 0x0D, 0x0D, 0x0D, 0x0D,
    0x00, 0x00, 0x12, 0x12, 0x1C, 0x1C, 0x27, 0x28, 0x24, 0x24, 0x24, 0x24, 0x24, 0x12, 0x00, 0x00,
    0x27, 0x27, 0x27, 0x27, 0x35, 0x35, 0x36, 0x36, 0x0D, 0x0D, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00,
    0x28, 0x28, 0x28, 0x29, 0x28, 0x1C, 0x1C, 0x1C, 0x00, 0x06, 0x06, 0x25, 0x24, 0x24, 0x24, 0x24,
    0x36, 0x37, 0x35, 0x33, 0x33, 0x33, 0x33, 0x33, 0x00, 0x00, 0x2C, 0x2C, 0x2C, 0x2C, 0x0D, 0x0D,
    0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x00, 0x09, 0x2A, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x00, 0x00,
    0x0F, 0x0F, 0x2C, 0x2C, 0x2C, 0x2C, 0x0B, 0x0B, 0x00, 0x0D, 0x2C, 0x2C, 0x2C, 0x2C, 0x1A, 0x00,
    0x2A, 0x0F, 0x1E, 0x20, 0x20, 0x09, 0x22, 0x02, 0x1A, 0x1E, 0x1A, 0x1A, 0x1A, 0x1A, 0x2A, 0x01,
    0x2C, 0x2C, 0x2D, 0x2D, 0x2D, 0x0F, 0x02, 0x0B, 0x00, 0x2C, 0x2C, 0x2C, 0x0D, 0x0D, 0x0D, 0x00,
    0x07, 0x14, 0x0D, 0x0D, 0x1E, 0x1E, 0x1E, 0x1E, 0x00, 0x2C, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A,
    0x0B, 0x23, 0x0D, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x2C, 0x2C,
    0x1A, 0x09, 0x2B, 0x14, 0x2C, 0x0C, 0x0C, 0x0C, 0x1A, 0x01, 0x1E, 0x1A, 0x0D, 0x0F, 0x0F, 0x1A,
    0x0F, 0x02, 0x23, 0x00, 0x0B, 0x00, 0x0C, 0x07, 0x2C, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x20, 0x02, 0x02, 0x05, 0x00, 0x02, 0x02, 0x02, 0x1A, 0x1A, 0x01, 0x0A, 0x01, 0x0D, 0x0E, 0x13,
    0x07, 0x07, 0x07, 0x07, 0x07, 0x09, 0x1F, 0x1F, 0x00, 0x0D, 0x0D, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C,
    0x09, 0x0D, 0x07, 0x09, 0x09, 0x0C, 0x09, 0x1F, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x13, 0x0A, 0x0A, 0x0A, 0x00, 0x00, 0x2C, 0x2C, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x39, 0x39, 0x3A, 0x38, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x3A, 0x3A, 0x3A,
    0x00, 0x00, 0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x41, 0x41, 0x42,
    0x3A, 0x3A, 0x06, 0x00, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A,
    0x3E, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3C, 0x3D, 0x43, 0x3C, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E,
    0x3A, 0x00, 0x00, 0x00, 0x00, 0x01, 0x2C, 0x2C, 0x3A, 0x3A, 0x3B, 0x00, 0x00, 0x01, 0x09, 0x0F,
    0x3D, 0x3D, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3E, 0x3E, 0x44, 0x44, 0x2F, 0x00, 0x00, 0x02,
    0x2C, 0x2C, 0x2C, 0x2C, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x07,
    0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x40, 0x3F, 0x1F, 0x40, 0x3F, 0x40, 0x02, 0x02, 0x06, 0x06,
    0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x08, 0x45, 0x01, 0x09, 0x09,
    0x00, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x07, 0x00, 0x01, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x2A,
    0x23, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x09, 0x2E, 0x3F, 0x3F, 0x46, 0x47, 0x47, 0x47,
    0x00, 0x1F, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x00, 0x1F, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x00,
    0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x3F, 0x3F, 0x46, 0x46, 0x46, 0x47, 0x0B, 0x0B,
    0x00, 0x2C, 0x2C, 0x2C, 0x0F, 0x1F, 0x07, 0x2C, 0x00, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x0F,
    0x00, 0x2E, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x0B, 0x3F, 0x3F, 0x3F, 0x46, 0x46, 0x45, 0x2E,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x2C, 0x2C, 0x2C, 0x1F, 0x01, 0x01, 0x01, 0x0F, 0x0F, 0x0F, 0x0F,
    0x3F, 0x1F, 0x2A, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x2E, 0x46, 0x46, 0x46, 0x3F, 0x3F, 0x3F, 0x3F,
    0x2C, 0x2C, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x07,
    0x3F, 0x3F, 0x00, 0x00, 0x00, 0x2A, 0x2E, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x46, 0x46, 0x46, 0x45,
    0x07, 0x07, 0x00, 0x09, 0x2C, 0x2C, 0x2C, 0x2C, 0x07, 0x07, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x0F,
    0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x01, 0x3F, 0x3F, 0x45, 0x46, 0x46, 0x3F, 0x46, 0x3F, 0x3F, 0x3F,
    0x2C, 0x2C, 0x2C, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F, 0x0B, 0x00, 0x00, 0x00,
    0x3F, 0x3F, 0x3F, 0x3F, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x41, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x42, 0x00, 0x00, 0x37, 0x2F, 0x00, 0x49, 0x44, 0x3E,
    0x06, 0x3E, 0x3E, 0x3E, 0x2F, 0x2F, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3E, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0x35, 0x00, 0x00, 0x00, 0x02, 0x02, 0x4A,
    0x2F, 0x2F, 0x2F, 0x00, 0x00, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x01,
    0x06, 0x01, 0x01, 0x2A, 0x46, 0x46, 0x2A, 0x1F, 0x45, 0x45, 0x45, 0x29, 0x45, 0x01, 0x02, 0x29,
    0x45, 0x45, 0x46, 0x45, 0x4A, 0x00, 0x01, 0x02, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x1F, 0x46, 0x46, 0x01, 0x00, 0x00, 0x01, 0x29, 0x45, 0x46, 0x46, 0x00, 0x01, 0x02, 0x45,
    0x02, 0x23, 0x10, 0x23, 0x01, 0x01, 0x01, 0x3F, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x00, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x10, 0x01,
    0x3F, 0x3F, 0x45, 0x46, 0x3F, 0x3F, 0x01, 0x02, 0x01, 0x00, 0x01, 0x00, 0x06, 0x01, 0x01, 0x01,
    0x45, 0x46, 0x46, 0x46, 0x46, 0x46, 0x00, 0x00, 0x00, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x02,
    0x00, 0x3F, 0x46, 0x48, 0x46, 0x46, 0x46, 0x01, 0x02, 0x0A, 0x40, 0x2A, 0x40, 0x40, 0x0A, 0x00,
    0x00, 0x00, 0x08, 0x46, 0x46, 0x46, 0x46, 0x46, 0x02, 0x02, 0x01, 0x01, 0x46, 0x45, 0x45, 0x45,
    0x01, 0x01, 0x00, 0x00, 0x00, 0x46, 0x46, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x23,
    0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x00, 0x45, 0x45, 0x46, 0x46, 0x46, 0x46, 0x46, 0x45,
    0x45, 0x45, 0x45, 0x3F, 0x3F, 0x3F, 0x45, 0x01, 0x23, 0x4A, 0x4A, 0x40, 0x40, 0x0A, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x3F, 0x48, 0x48, 0x46, 0x46, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x45,
    0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46,
    0x00, 0x3F, 0x3F, 0x4B, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x0A, 0x0A, 0x2A, 0x2A, 0x2A, 0x0A,
    0x00, 0x00, 0x08, 0x05, 0x02, 0x2A, 0x3F, 0x46, 0x46, 0x46, 0x46, 0x23, 0x23, 0x02, 0x01, 0x01,
    0x3F, 0x46, 0x02, 0x01, 0x01, 0x01, 0x00, 0x00, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x2F, 0x2F, 0x2F, 0x2F, 0x2F, 0x2F, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x02, 0x02, 0x00, 0x00, 0x01, 0x2F, 0x2F, 0x2F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x2F, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x2F, 0x4C, 0x41, 0x41, 0x2F, 0x2F, 0x2F, 0x2F, 0x2F, 0x2F, 0x00, 0x00, 0x00, 0x2F, 0x2F, 0x2F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
    0x4C, 0x2F, 0x4D, 0x2F, 0x00, 0x2F, 0x00, 0x00, 0x2F, 0x2F, 0x2F, 0x2F, 0x2F, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x08, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
    0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x02, 0x02, 0x23, 0x40, 0x40, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x08, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x80, 0x00, 0x80, 0x61, 0x80, 0x82, 0x94, 0x01, 0x94, 0x82, 0x80, 0xC2, 0x80, 0x44, 0x82, 0x0A,
    0x80, 0xA5, 0x81, 0x86, 0x81, 0x26, 0x81, 0x65, 0x81, 0xC5, 0x82, 0xAA, 0x83, 0x09, 0x82, 0x6B,
    0x80, 0xC9, 0x82, 0x5F, 0x81, 0xFA, 0x81, 0x03, 0x82, 0x46, 0x83, 0x4A, 0x83, 0x4D, 0x82, 0xA6,
    0x82, 0xC7, 0x81, 0xB6, 0x82, 0xEA, 0x82, 0x1A, 0x82, 0x1E, 0x85, 0x99, 0x83, 0x0C, 0x81, 0xE9,
    0x82, 0x26, 0x81, 0xC3, 0x81, 0x62, 0x80, 0xE5, 0x81, 0xFE, 0x85, 0x52, 0x81, 0x2E, 0x85, 0x11,
    0x80, 0xEE, 0x81, 0x6C, 0x81, 0x89, 0x81, 0x82, 0x82, 0xAC, 0x82, 0xCD, 0x82, 0x4D, 0x80, 0x05,
    0x80, 0x4D, 0x80, 0xB3, 0x81, 0x14, 0x81, 0xBF, 0x81, 0x3A, 0x80, 0xD2, 0x80, 0xA9, 0x80, 0x8C,
    0x81, 0x7F, 0x81, 0x5B, 0x81, 0x3E, 0x90, 0x6E, 0x80, 0xDA, 0x80, 0xDE, 0x80, 0xBE, 0x82, 0x0D,
    0x81, 0x49, 0x80, 0x52, 0x80, 0x99, 0x80, 0xB6, 0x80, 0x2D, 0x81, 0x8C, 0x81, 0xEE, 0x82, 0x50,
    0x81, 0xF0, 0x80, 0x78, 0x81, 0x29, 0x82, 0x30, 0x88, 0x49, 0x88, 0x2A};

static const u8 sSaveIcon[] = {
    0x09, 0x00, 0x00, 0x20, 0x00, 0x40, 0x00, 0x00, 0x01, 0x02, 0x00, 0x23, 0x00, 0x00, 0x08, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x02, 0x02,
    0x00, 0x00, 0x00, 0x03, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x02,
    0x00, 0x05, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x05, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00,
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x08, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x06, 0x08, 0x08, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x0A, 0x0A, 0x0A,
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00,
    0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x09, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x0B,
    0x00, 0x00, 0x00, 0x00, 0x0D, 0x0D, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x0D, 0x0D, 0x0D,
    0x0B, 0x0B, 0x0B, 0x0B, 0x0A, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B, 0x00, 0x00, 0x00,
    0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x0C, 0x00,
    0x00, 0x0E, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0F, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11,
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
    0x10, 0x10, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x11, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x12,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12,
    0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12,
    0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12,
    0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12,
    0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x00, 0x00, 0x13, 0x13, 0x13, 0x13, 0x14, 0x14,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x00, 0x14, 0x14, 0x13, 0x13, 0x13, 0x13, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x00, 0x00, 0x00, 0x09, 0x09, 0x09, 0x09, 0x09,
    0x00, 0x09, 0x09, 0x01, 0x01, 0x01, 0x01, 0x01, 0x09, 0x09, 0x09, 0x18, 0x18, 0x18, 0x18, 0x18,
    0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
    0x01, 0x01, 0x01, 0x16, 0x17, 0x17, 0x17, 0x17, 0x18, 0x18, 0x18, 0x09, 0x09, 0x09, 0x09, 0x09,
    0x09, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x17, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x00, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
    0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x09, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x19, 0x19, 0x19, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x09, 0x09, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x09, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x09, 0x1A, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x16, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x00, 0x19, 0x19, 0x19, 0x19, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x02, 0x02, 0x08, 0x08, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x08, 0x08, 0x1B, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,
    0x00, 0x00, 0x00, 0x00, 0x09, 0x09, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x02, 0x02, 0x08, 0x08, 0x08, 0x08, 0x08, 0x02, 0x02, 0x02, 0x08, 0x08, 0x08, 0x08, 0x08,
    0x00, 0x00, 0x09, 0x09, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x01, 0x01, 0x16, 0x16, 0x03,
    0x08, 0x08, 0x08, 0x1B, 0x1B, 0x1B, 0x1B, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
    0x08, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x05, 0x18, 0x05, 0x05, 0x06, 0x06, 0x06, 0x1C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x08, 0x1B, 0x02, 0x1B, 0x18, 0x16, 0x00, 0x06, 0x06, 0x06, 0x06, 0x1C, 0x17, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08,
    0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
    0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x0A, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x08, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,
    0x0A, 0x0A, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x1D, 0x18, 0x18, 0x18,
    0x0D, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0D, 0x0D, 0x0D, 0x0F, 0x00, 0x00, 0x0D, 0x0D,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x1D,
    0x0D, 0x0D, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x0D, 0x0D, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0D, 0x0D, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1D, 0x1D, 0x1D, 0x00, 0x00, 0x00, 0x12, 0x12, 0x12, 0x12, 0x12,
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1E, 0x1E, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1E,
    0x1F, 0x20, 0x20, 0x20, 0x20, 0x1F, 0x1F, 0x1F, 0x12, 0x12, 0x11, 0x12, 0x11, 0x11, 0x11, 0x11,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1F, 0x1F, 0x1F, 0x1F, 0x21, 0x1D, 0x1D, 0x1D, 0x12, 0x12, 0x12, 0x12, 0x12, 0x21, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x15, 0x1F, 0x1F, 0x15, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x22, 0x22, 0x22,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x12,
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x12, 0x11, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12,
    0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12,
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x12, 0x00, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x00, 0x00,
    0x12, 0x12, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00, 0x12, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1D, 0x1D, 0x1D, 0x1D, 0x1D, 0x1D, 0x1D, 0x00, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x12, 0x12, 0x12, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x80, 0x00, 0x80, 0xCC, 0x82, 0x5F, 0x81, 0x0E, 0x81, 0x30, 0x81, 0x52, 0x81, 0x96, 0x82, 0x1B,
    0x82, 0x1E, 0x80, 0x44, 0x81, 0xDF, 0x81, 0xBF, 0x81, 0x5A, 0x81, 0x7F, 0x80, 0x8D, 0x81, 0x1A,
    0x81, 0x1F, 0x80, 0xDF, 0x80, 0x9F, 0x80, 0x29, 0x80, 0x2C, 0x80, 0x76, 0x80, 0xCB, 0x80, 0x87,
    0x80, 0x88, 0x80, 0x43, 0x81, 0xB8, 0x81, 0xFA, 0x81, 0x74, 0x80, 0x48, 0x80, 0x24, 0x80, 0x96,
    0x80, 0x92, 0x80, 0x51, 0x80, 0x79};

/*
/ Settings
*/

static BetterSMS::Settings::SettingsGroup sSettingsGroup(1, 0, BetterSMS::Settings::Priority::MODE);

static int sMaxActiveCodes = 4;
static BetterSMS::Settings::IntSetting sMaxActiveCodesSetting("Average Active Codes", &sMaxActiveCodes);

static bool sDisplayCodes = true;
static BetterSMS::Settings::BoolSetting sDisplayCodesSetting("Display Active Codes", &sDisplayCodes);

static int sGracePeriodTimer = 7;
static BetterSMS::Settings::IntSetting sGracePeriodTimerSetting("Grace Period", &sGracePeriodTimer);

/*
/ Module Info
*/

static BetterSMS::ModuleInfo sModuleInfo("Chaos", 1, 1, &sSettingsGroup);


/*
/ Callbacks
*/

BETTER_SMS_FOR_CALLBACK static void initVars(TApplication *tapp) { 
    currentTime = 0;

    Code addList[] = {
        // codeID	                    name					      rarity	 duration	               pFunc
        {PAUSE_WATER,               "Pause Water",			            50,			 5,	        codeContainer.pauseWater},
        {DUMMY_THICC_MARIO,         "Dummy Thicc Mario",		        40,			15,		    codeContainer.dummyThiccMario},	
        {NO_MARIO_REDRAW,           "No Mario Redraw",		            60,			15,		    codeContainer.noMarioRedraw},									
        {WHITE_MARIO_SILHOUETTE,    "White Mario Silhouette",           50,			15,		    codeContainer.whiteMarioSilhouette},
        {NO_MACTOR_MODELS,          "The Void Calls...",		        20,			20,		    codeContainer.noMActorModels},
        {STOP_TLIVEACTOR_PERFORM,   "Untitled",                         20,         20,         codeContainer.stopTLiveActorPerform},
        {STOP_CONTROL_INPUTS,       ":)",                               20,			 1,		    codeContainer.stopControlInputs},
        {SPAM_SPRAY_CENTRAL,        "Spam Spray Central",               65,			20,		    codeContainer.spamSprayCentral},
        {ADD_CODE_SLOT,             "Add Code Slot",                    15,			60,		    codeContainer.addCodeSlot},
        {SMALL_JUMPS,               "Small Jumps",                      55,			15,		    codeContainer.smallJumps},
        {CLUMSY_JUMPS,              "Clumsy Jumps",                     60,			20,		    codeContainer.lockJumpDirection},
        {PATHETIC_FLUDD,            "Pathetic FLUDD",                   70,			30,		    codeContainer.sadFLUDD},
        {LAND_MOVEMENT_LOCK,        "Landing Movement Lock",            40,			30,		    codeContainer.landMovementLock},
        {UNLIMITED_TURBO,           "Unlimited Turbo but no Turbo",     25,			30,		    codeContainer.forceTurbo},
        {CRESCENDO,                 "Crescendo",                        30,         10,         codeContainer.setMusicVol},
        {SPEEN_ID,                  "S P E E N",                        40,         10,         codeContainer.SPEEN},
        {NOZZLE_ROLL,               "Nozzle Roll",				        35,          7,         codeContainer.changeNozzleRandom},
        {GIVE_COINS,                "We're Rich!",                       5,          5,         codeContainer.giveCoins},
        {SPAWN_YOSHI,               "Spawn Yoshi",                      20,         30,         codeContainer.spawnYoshi},
        {SUN_DRIP,                  "Sun Drip",					        50,			30,		    codeContainer.sunglassesAndShineShirt},
		{SPEED_UP_TEMPO,            "Affrettando",				        60,			 5,		    codeContainer.speedUpTempo},
        {TP_MARIO_BACK,             "Return to Sender",			        10,			15,		    codeContainer.tpMarioBack},
        {HP_ROULETTE,               "High Stakes Goomba",		        35,			10,		    codeContainer.hpRoulette},
        {LUIGI_SLIDE,               "Luigi Slide",				        50,			20,		    codeContainer.luigiSlide},
        {FIREBALL,                  "FIREBALL!!!",		                50,			25,		    codeContainer.emitFireball},
		{ASCEND,                    "a s c e n d",				        25,			30,		    codeContainer.ascend},
        {DOUBLE_TIME,               "Double Time!!",				    25,			30,		    codeContainer.doubleTime},
		{SCRAMBLE_TEXTURES,         "Scramble Textures",			    60,			20,		    codeContainer.messUpTextures},
		{CHANGE_LIVES,              "Life Changer",					    50,			 1,		    codeContainer.changeLives},
        {HELPFUL_INPUT_DISPLAY,     "Helpful Input Display!",           50,			30,		    codeContainer.helpfulInputDisplay},
		{REVERSE_INPUTS,            "Confusion",						30,			20,		    codeContainer.reverseInputsToggle},
		{SIMON_SAYS,                "Angry_Max Says",				    55,			 5,		    codeContainer.simonSays},
		{DOOR_STUCK,                "DOOR STUCK",					    55,			20,		    codeContainer.lockMarioAnim},
		{GIANT_MARIO,               "GIANT MARIO",					    30,			15,		    codeContainer.scaleMario},
		{SNAKE,                     "MAR.IO",						    50,			10,		    codeContainer.snakeGame},
		{MOON_GRAVITY,              "Moon Gravity",					    50,			15,		    codeContainer.moonGravity},
		{CRAZY_GRAVITY,             "Crazy Gravity",					40,			30,		    codeContainer.crazyGravity},
		{CHAOS_CODE,                "Chaos Code",					     1,			60,		    codeContainer.chaosCode},
		{DISABLE_WATER_COL,         "Disable Water Collision",	        50,			60,		    codeContainer.disableWaterCol},
        {SHUFFLE_OBJECTS,			"Shuffle Objects",					15,			 3,			codeContainer.shuffleObjects},
        {CRAZY_COLLISION,			"Crazy Collision",					 1,			15,			codeContainer.crazyCollision},
        {INV_WATER_MOMENTUM,		"Invert Water",						50,			60,			codeContainer.invertWaterToggle},
        {MOVE_SHINES,				"The Shining",						 5,			30,			codeContainer.moveShines},
        {PAINT_RANDOM_COLLISION,	"Collision Paint",					50,			20,			codeContainer.paintRandomCollision},
        {TANK_CONTROLS,				"Tank Controls",					30,			30,			codeContainer.tankControls},
        {WEIRD_CAMERA,				"Weird Cam",						30,			30,			codeContainer.weirdCamera},
        {OBJECT_VORTEX,				"Object Vortex",					20,			30,			codeContainer.objectVortex},
        {DOUBLE_PERSPECTIVE,		"Double Perspective",				20,			30,			codeContainer.doublePerspective},
        {STREEEEETCH,				"streeeeetch",						55,			20,			codeContainer.streeeeetch},
        {SMS_WIKI,					"SMS Wiki",							30,			20,			codeContainer.smsWiki},
        {KEEP_ACCELERATING,			"Terminal Velocity?",				50,			40,			codeContainer.keepAccelerating},
        {ICE_PHYSICS,				"Slippery",							50,			40,			codeContainer.icePhysics},
        {CHANGE_WALLS,				"Weird Walls",						20,			30,			codeContainer.changeWalls},
        {MAKE_MARIO_OBJ,			"Prop Hunt",						50,			60,			codeContainer.makeMarioAnObject},
		{POPUP_SAVE_PROMPT,			"Quicksave",						50,			 1,			codeContainer.popupSavePrompt},
		{PING_LAG,					"Nintendo Online",					25,			25,			codeContainer.pingLag},
		{NO_GRACE,					"No Grace Period",					10,			25,			codeContainer.noGracePeriods},
		{EARTHQUAKE,				"Earthquake!!!!",					10,			25,			codeContainer.earthquake},
		{SOMETIMES_DOUBLE_COINS,	"Double Coins???",					60,			30,			codeContainer.sometimesDoubleCoins},
		{REVERSE_RARITIES,			"Rarity Swap",						 1,			90,			codeContainer.reverseRarities},
		{CHANGE_SCREEN_COLOR,	    "GAMING MONITOR",				    50,			30,			codeContainer.changeScreenColorToggle},
		{UPSIDEDOWN_CAM,			"Flip-Turned Upside Down",			20,			30,			codeContainer.upsideDownCamToggle},
		{JOYCON_DRIFT,				"Joycon Drift",						20,			30,			codeContainer.joyconDrift},
		{SINE_MOMENTUM,				"Whacky Momentum",					15,			30,			codeContainer.sineMomentum},
		{WINDY_DAY,					"Windy Day",						15,			30,			codeContainer.windyDay},
		{BRAWL,						"brawl lol",						30,			30,			codeContainer.brawl},
		{NOCLIP,					"Noclip",							 1,			 3,			codeContainer.noclip},			// shoutouts to joshuamk for unintentionally doing all the heavy work for this code
		{JUMPSCARE,					"Jumpscare",						 5,			 1,			codeContainer.jumpscare},
		{SMALL_WORLD,				"It's a Small World",				80,		   0.5,			codeContainer.smallWorld},
		{RANDOM_SPRAY,				"Precision",						50,			30,			codeContainer.randomSpray},
        {PLAY_SOUNDS,				"epic sfx",							50,			60,			codeContainer.playAllSounds},
        {PICK_UP_OBJ,				"Grab Object",						50,			 5,			codeContainer.pickUpObj},
        {ROTATE_OBJS,				"Rotate Objects",					60,			 1,			codeContainer.rotateObjs},
        {QUAKE_PRO,					"Minecraft Pro",					50,			40,			codeContainer.quakeProToggle},
        {ROLLIN,					"Keep Rollin' Rollin' Rollin'",		50,			45,			codeContainer.rollin},
        {SHRINK_RAY,				"Shrink Ray!",						50,			45,			codeContainer.shrinkRay},
        {CS_PLAYERS,				"CS Players",						50,			41.2,		codeContainer.csPlayers},
        {INVERT_MARIO,				"Inversion",						50,			45,		    codeContainer.invertMario},
        {FIRE_MOVEMENT,				"MAMA!!",						    50,			45,		    codeContainer.fireMovement},
        {LOL,						"lol",								50,			20,		    codeContainer.lol},
        {TILTED,					"Tilted",							50,			30,		    codeContainer.tilted},
        {START_TIMER,				"Start Timer",						50,			 1,		    codeContainer.startTimer},		// TODO: finish/modify this code
        {SUPERPOSITION,				"Superposition",					50,			20,		    codeContainer.superposition},
        {WIDE_MARIO,				"Elastic Mario",					50,			20,		    codeContainer.wideMario},
        {SIGHTSEER,					"Delfino Sightseer",                50,			 1,			codeContainer.sightseer},
        {STAR_POWER,				"Star Power",						50,			10,			codeContainer.starPowerToggle},
        {TRIPPY_TEXTURES,			"Trippy",							50,			40,			codeContainer.trippyTextures},
        {IMA_TIRED,					"I'ma Tired!",						50,			 1,			codeContainer.imaTired},
        {FREEZE_ANIMS,				"Freeze!",							50,			30,			codeContainer.freezeAnims},
        {FAST_N_FURIOUS,			"Move or... DIE!!!",				50,			30,			codeContainer.fastNFurious},
        {DIVING_MODE,				"CAMERA BAD",						50,			30,			codeContainer.divingMode},
        {PAUSE_TIMERS,				"Pause Codes",						50,			30,			codeContainer.pauseTimers},	
        {CHANGE_MUSIC,				"Change Music",						50,			 1,			codeContainer.changeMusic},
        {OFFSET_MARIO,				"Offset Mario",						50,			30,			codeContainer.offsetMarioToggle},
        {REVERSE_MARIO,				"Reverse Mario",					50,			30,			codeContainer.reverseMarioToggle},
        {FAKE_DEATH,				"Kill Mario",						50,			 5,			codeContainer.fakeDeath}
        // idea: code that adds companion (maybe companion can pick you up and throw you)
        // idea: inception code which does something with the mirrow version of stage bmds
        // idea: a code which draws the collision triangles in a radius (the matrix)
        // idea: selfie stick code
        // idea: bouncy surface code (make npcs or something bouncy to the touch)
        // idea: tiny mario
        // idea: rainbow water
		// idea: a code that sets the camera to focus on the nearest object to mario
        // idea: out of body code (blr out calcAnim)
	};

    #if DEV_MODE

    // any code names listed here will get their rarity set to 100 while the rest are set to 0
    u8 whitelist[] = {STAR_POWER};
    if (!(whitelist[0] == NO_WHITELIST)) {
        for (Code c : addList) {
            for (u8 id : whitelist) {
                if (c.codeID == id)
                    codeContainer.addCode(c);
            }
        }
    } else {
        for (Code c : addList) {
            codeContainer.addCode(c);
        }
    }

    #else

    for (Code c : addList) {
        codeContainer.addCode(c);
    }
    #endif

    OSReport("Finished initVars!\n");
    Utils::printChaosPtrAddr();
    OSReport("starPower addr: 0x%x\n", &codeContainer.starPower);
}

static OSTime sBaseTime = 0;

BETTER_SMS_FOR_CALLBACK static void updateTime(TApplication *tapp) {

    if (!tapp->mDirector)
        return;

    TMarDirector *marDirector = static_cast<TMarDirector *>(tapp->mDirector);
    if (marDirector->mCurState == TMarDirector::Status::STATE_NORMAL) {
        OSTime diff   = OSGetTime() - sBaseTime;
        float seconds = OSTicksToSeconds(float(u32(diff)));
        currentTime += seconds;

        // stop codes other than pauseTimers from counting down
        if (codeContainer.isCodeActive(PAUSE_TIMERS)) {
            for (Code &c : codeContainer.codeList) {
                if (c.isActive && c.codeID != PAUSE_TIMERS) {
                    c.timeCalled += seconds;
                }
            }
        }
			

        if (codeContainer.isCodeActive(DOUBLE_TIME))
			currentTime += seconds;
    }

    sBaseTime = OSGetTime();
}

#if DEV_MODE
BETTER_SMS_FOR_CALLBACK static void requestEndAllCodes(TMarDirector *director) {

	//OSReport("-> Made it into requestEndAllCodes!");

	u32 maskedInput = gpMarioOriginal->mController->mButtons.mInput & ~4294963455; // this is just copied from simonSays bc im a lazy bastard

	// if "a + b + x + y" are all pressed
	if (maskedInput & TMarioGamePad::A && maskedInput & TMarioGamePad::B && maskedInput & TMarioGamePad::X && maskedInput & TMarioGamePad::Y)
        Utils::endAllCodes();
}
#endif

BETTER_SMS_FOR_CALLBACK static void chaosEngine(TMarDirector *director, const J2DOrthoGraph *ortho) {

    if (director->mCurState == TMarDirector::Status::STATE_NORMAL) {
        codeContainer.activateCodes();
        codeContainer.checkCodeTimers();
        codeContainer.iterateThroughCodes();
    } else if (director->mAreaID == 15) {	// is in option.szs?
        codeContainer.maxActiveCodes = sMaxActiveCodes;
        codeContainer.baseMaxActiveCodes = sMaxActiveCodes;
        codeContainer.gracePeriod    = sGracePeriodTimer;
        codeContainer.baseGracePeriod    = sGracePeriodTimer;
    }
}

BETTER_SMS_FOR_CALLBACK static void initCodeDisplay(TMarDirector *director) {

    char displayBuffer[MAX_BUF];
    memset(displayBuffer, 'a', MAX_BUF);  // fill up buffer

    codeContainer.codeDisplay = new J2DTextBox(gpSystemFont->mFont, "Dummy Code");
    codeContainer.codeDisplay->setString(displayBuffer);

    codeContainer.codeDisplay->mCharSizeX = 16;
    codeContainer.codeDisplay->mCharSizeY = 16;
    codeContainer.codeDisplay->mGradientTop    = GREEN_TOP;
    codeContainer.codeDisplay->mGradientBottom = GREEN_BOTTOM;

    OSReport("codeDisplay initialization successful!\n");
}

BETTER_SMS_FOR_CALLBACK static void drawCodeDisplay(TMarDirector *director,  const J2DOrthoGraph *ortho) {

	if (!sDisplayCodes)
		return;

    char *displayBuffer = codeContainer.codeDisplay->getStringPtr();
    memset(displayBuffer, 0, NORMAL_BUF);  // clear buffer

    if (codeContainer.isCodeActive(CHAOS_CODE) || codeContainer.isCodeGraced(CHAOS_CODE)) {
        Code chaosCode;
        codeContainer.getCodeFromID(CHAOS_CODE, chaosCode);
        snprintf(displayBuffer, NORMAL_BUF, "Chaos Code: %.0f%s\n",
                 chaosCode.duration - (currentTime - chaosCode.timeCalled), "s");
    } else {
        for (Code c : codeContainer.codeList) {
        #if DEV_MODE
            if (c.isActive || c.isGraced) {
                snprintf(displayBuffer, NORMAL_BUF, "%s%s: %.0f%s\n", displayBuffer, c.name,
                    c.duration - (currentTime - c.timeCalled), "s");
            }
        #else
            if (c.isActive) {
				if (c.codeID == PAUSE_TIMERS)
                    snprintf(displayBuffer, NORMAL_BUF, "%s%s: %.0f%s\n", displayBuffer, c.name,
                        c.duration - (alt_currentTime - c.timeCalled), "s");
                else
					snprintf(displayBuffer, NORMAL_BUF, "%s%s: %.0f%s\n", displayBuffer, c.name,
                         c.duration - (currentTime - c.timeCalled), "s");
            }
        #endif
        }
    }

    // draw drop shadow
    Utils::drawCodeDisplay(BLACK, 16, -83, 202);

    // draw regular text
    Utils::drawCodeDisplay(GREEN_TOP, GREEN_BOTTOM, 16, -85, 200);
}

// resets and/or ends codes in between stages if need be
BETTER_SMS_FOR_CALLBACK static void resetCodesOnStageExit(TApplication *tapp) {

    if (codeContainer.isCodeActive(NO_MARIO_REDRAW)) {
        codeContainer.endCode(NO_MARIO_REDRAW); 
        codeContainer.resetCode(NO_MARIO_REDRAW);
    }

    if (codeContainer.isCodeActive(STREEEEETCH)) {
        codeContainer.endCode(STREEEEETCH);
        codeContainer.resetCode(STREEEEETCH);
    }

    if (codeContainer.isCodeActive(KEEP_ACCELERATING))
        codeContainer.resetCode(KEEP_ACCELERATING);

    if (codeContainer.isCodeActive(MOVE_SHINES))
        codeContainer.resetCode(MOVE_SHINES);

    if (codeContainer.isCodeActive(MAKE_MARIO_OBJ))
        codeContainer.resetCode(MAKE_MARIO_OBJ);

    if (codeContainer.isCodeActive(PING_LAG))
        codeContainer.resetCode(PING_LAG);

    if (codeContainer.isCodeActive(PICK_UP_OBJ))
        codeContainer.resetCode(PICK_UP_OBJ);
}

// Module definition

static void initModule() {
    OSReport("Initializing Module...\n");

    // Register callbacks
    BetterSMS::Game::addInitCallback(initVars);
    BetterSMS::Game::addLoopCallback(updateTime);    
    BetterSMS::Stage::addInitCallback(initCodeDisplay);
    BetterSMS::Stage::addDraw2DCallback(chaosEngine);
    BetterSMS::Stage::addDraw2DCallback(drawCodeDisplay);
    BetterSMS::Stage::addExitCallback(resetCodesOnStageExit);

	#if DEV_MODE
    BetterSMS::Stage::addUpdateCallback(requestEndAllCodes);
	#endif

    // Register settings
    sMaxActiveCodesSetting.setValueRange({1, 10, 1});
    sSettingsGroup.addSetting(&sMaxActiveCodesSetting);

	
    sSettingsGroup.addSetting(&sDisplayCodesSetting);
	sGracePeriodTimerSetting.setValueRange({0, 10, 1});
    
    sSettingsGroup.addSetting(&sGracePeriodTimerSetting);



    {
        auto &saveInfo        = sSettingsGroup.getSaveInfo();
        saveInfo.mSaveName    = "SMS Chaos Settings";
        saveInfo.mBlocks      = 1;
        saveInfo.mGameCode    = 'GMSB';
        saveInfo.mCompany     = 0x3031;  // '01'
        saveInfo.mBannerFmt   = CARD_BANNER_CI;
        saveInfo.mBannerImage = reinterpret_cast<const ResTIMG *>(sSaveBnr);
        saveInfo.mIconFmt     = CARD_ICON_CI;
        saveInfo.mIconSpeed   = CARD_SPEED_SLOW;
        saveInfo.mIconCount   = 2;
        saveInfo.mIconTable   = reinterpret_cast<const ResTIMG *>(sSaveIcon);
        saveInfo.mSaveGlobal  = true;
    }
    BetterSMS::registerModule(sModuleInfo);
}

// Definition block
KURIBO_MODULE_BEGIN("Chaos", "Angry_Max, MasterMattK", "v0.1") {
    // Set the load and unload callbacks to our registration functions
    KURIBO_EXECUTE_ON_LOAD { initModule(); }
}
KURIBO_MODULE_END()
